version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: employee-nexus-db
    environment:
      POSTGRES_DB: buidco_leave
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-sid91221}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - employee-nexus-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Employee Nexus Backend API
  api:
    build: .
    container_name: employee-nexus-api
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=buidco_leave
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD:-sid91221}
      - PORT=5000
      - MAX_FILE_SIZE=10485760
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
      - CORS_ORIGIN=http://localhost:3000,https://yourdomain.com
    ports:
      - "5000:5000"
    volumes:
      - uploads_data:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - employee-nexus-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: employee-nexus-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    networks:
      - employee-nexus-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  uploads_data:
    driver: local

networks:
  employee-nexus-network:
    driver: bridge 